version: "3"

services:
  postgres:
    image: postgres:14.1-alpine
    restart: unless-stopped
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    ports:
      - '55432:5432'
    volumes:
      - ${INSTANCE_NAME}_postgres-data:/var/lib/postgresql/data
  minio:
    image: bitnami/minio:latest
    restart: unless-stopped
    hostname: minio
    expose:
      - 9009
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: minio server --address :9009 /bitnami/minio/data
    volumes:
      - ${INSTANCE_NAME}_minio-data:/bitnami/minio/data
  webapp:
    build: '.'
    restart: unless-stopped
    links:
      - postgres:postgres
      - minio:minio
    ports:
      - '56481:8080'
    expose:
      - 56481
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/
      - MINIO_URL=http://minio:9009
      - ALLOWED_ORIGIN=http://172.22.0.20:56481
      - MINIO_DEFAULT_BUCKET=main
      - INSTANCE_NAME=${INSTANCE_NAME}
  grafana:
    build: './config/grafana'
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ${INSTANCE_NAME}_grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${INSTANCE_NAME}_prometheus-data:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    volumes:
      - ./config/promtail/config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      monitoring:
        aliases:
          - promtail
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./config/loki/config.yaml:/etc/loki/config.yaml
      - ${INSTANCE_NAME}_loki-data/index:/data/index
      - ${INSTANCE_NAME}_loki-data/chunks:/data/chunks
      - ${INSTANCE_NAME}_loki-data/cache:/data/cache
      - ${INSTANCE_NAME}_loki-data/compactor:/data/compactor
      - ${INSTANCE_NAME}_loki-data/wal:/loki/wal
    networks:
      monitoring:
        aliases:
          - loki

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  monitoring:
    driver: bridge

volumes:
  ${INSTANCE_NAME}_postgres-data:
    driver: local
  ${INSTANCE_NAME}_minio-data:
    driver: local
  ${INSTANCE_NAME}_grafana-data:
    driver: local
  ${INSTANCE_NAME}_prometheus-data:
    driver: local
  ${INSTANCE_NAME}_loki-data:
    driver: local